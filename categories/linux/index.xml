<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 倾旋的博客</title><link>https://payloads.online/categories/linux/</link><description>Recent content in Linux on 倾旋的博客</description><generator>Hugo</generator><language>zh-cn</language><copyright>倾旋 All rights reserved</copyright><lastBuildDate>Tue, 20 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://payloads.online/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>浅谈使用C语言开发服务端漏洞扫描设计</title><link>https://payloads.online/archivers/2018-03-20/1/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-03-20/1/</guid><description>0x00 前言 都是自己闷头搞出来的经验，对于自己是经验，对大家就不知道合不合口味了。
本文可能过多的穿插以下知识点：
套接字 协议选择 服务端模型 信号处理 多进程、多线程 任务派发过程 能尽量图示就图示了。顺便总结一下自己网络编程的经验。 :D
0x01 网络套接字(SOCKET) 什么是套接字 在我的理解中，网络套接字是一个被封装在传输层与应用层之间的API接口。
0x01 每一个方法都被操作系统支持，我们只需要知道创建套接字的流程以及网络基本知识就可以进行套接字的编程了。
许多的远程利用攻击、漏洞验证工具都离不开套接字，没有套接字就没有现在能够进行“进程”与“进程”之间通信的过程实现。
下面引用百科的解释：
TCP用主机的IP地址加上主机上的端口号作为TCP连接的端点，这种端点就叫做套接字（socket）或插口。
套接字用（IP地址：端口号）表示。
它是网络通信过程中端点的抽象表示，包含进行网络通信必需的五种信息：连接使用的协议，本地主机的IP地址，本地进程的协议端口，远地主机的IP地址，远地进程的协议端口。
听起来还是非常模糊、太抽象了！
那么我们来看看它到底是什么？
套接字的地址结构 刚才百科告诉我们，套接字用（IP地址：端口号）表示。
那么在网络编程中如何告诉计算机，什么是端口，什么是端口号呢？
于是出现了被计算机界公认的结构体，这个结构体保存在系统的标准库中：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 #include &amp;lt;arpa/inet.h&amp;gt; struct sockaddr_in { __SOCKADDR_COMMON (sin_); in_port_t sin_port;	/* Port number. */ struct in_addr sin_addr;	/* Internet address. */ /* Pad to size of `struct sockaddr&amp;#39;. */ unsigned char sin_zero[sizeof (struct sockaddr) - __SOCKADDR_COMMON_SIZE - sizeof (in_port_t) - sizeof (struct in_addr)]; }; 看起来还是比较复杂的，但是用起来一点都不复杂。</description></item><item><title>渗透测试中使用Ubuntu的一些小技巧</title><link>https://payloads.online/archivers/2018-03-18/1/</link><pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-03-18/1/</guid><description>0x00 前言 由于学习C、C++我喜欢在Linux平台，首选了Ubuntu这个发新版，目前已经做得很不错了，但是平常使用的时候会发现一些比较麻烦的事情。
本文就把一些技巧分享、记录下来。
操作系统版本：Ubuntu 17.10
我的源：
1 2 3 4 5 6 7 8 9 deb http://cn.archive.ubuntu.com/ubuntu/ artful universe deb http://cn.archive.ubuntu.com/ubuntu/ artful-updates universe deb http://cn.archive.ubuntu.com/ubuntu/ artful multiverse deb http://cn.archive.ubuntu.com/ubuntu/ artful-updates multiverse deb http://cn.archive.ubuntu.com/ubuntu/ artful-backports main restricted universe multiverse deb http://security.ubuntu.com/ubuntu artful-security main restricted deb http://security.ubuntu.com/ubuntu artful-security universe deb http://security.ubuntu.com/ubuntu artful-security multiverse 0x01 右键 nautilus-actions 是一个提供用户自定义鼠标右键菜单的软件。
我们可以通过nautilus-actions-config-tool 来配置自己想要的菜单
安装方式很简单：sudo apt-get install nautilus-actions
在命令行中启动nautilus-actions-config-tool就可以打开配置页面
0x01 可以看到我已经自己添加了两个菜单，主要用于Nmap从文本中读取目标进行扫描
Ubuntu默认情况下是没有新建文本这个菜单的，我们自己通过这个工具添加一下试试：
0x02 配置一下命令：
0x03 这里有几个变量介绍一下：</description></item></channel></rss>