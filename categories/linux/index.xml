<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on 倾旋的博客</title><link>https://payloads.online/categories/linux/</link><description>Recent content in Linux on 倾旋的博客</description><generator>Hugo</generator><language>zh-cn</language><copyright>倾旋 All rights reserved</copyright><lastBuildDate>Tue, 20 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://payloads.online/categories/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>浅谈使用C语言开发服务端漏洞扫描设计</title><link>https://payloads.online/archivers/2018-03-20/1/</link><pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-03-20/1/</guid><description>&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>都是自己闷头搞出来的经验，对于自己是经验，对大家就不知道合不合口味了。&lt;/p>
&lt;p>本文可能过多的穿插以下知识点：&lt;/p>
&lt;ul>
&lt;li>套接字&lt;/li>
&lt;li>协议选择&lt;/li>
&lt;li>服务端模型&lt;/li>
&lt;li>信号处理&lt;/li>
&lt;li>多进程、多线程&lt;/li>
&lt;li>任务派发过程&lt;/li>
&lt;/ul>
&lt;p>能尽量图示就图示了。顺便总结一下自己网络编程的经验。 :D&lt;/p>
&lt;h2 id="0x01-网络套接字socket">0x01 网络套接字(SOCKET)&lt;/h2>
&lt;h3 id="什么是套接字">什么是套接字&lt;/h3>
&lt;p>在我的理解中，网络套接字是一个被封装在传输层与应用层之间的API接口。&lt;/p>
&lt;p>&lt;img src="https://images.payloads.online/22779e12-4f5f-11ec-928f-00d861bf4abb.jpg" alt="enter description here" title="0x01">&lt;/p>
&lt;p>每一个方法都被操作系统支持，我们只需要知道创建套接字的流程以及网络基本知识就可以进行套接字的编程了。&lt;/p>
&lt;p>许多的远程利用攻击、漏洞验证工具都离不开套接字，没有套接字就没有现在能够进行“进程”与“进程”之间通信的过程实现。&lt;/p>
&lt;p>下面引用百科的解释：&lt;/p>
&lt;p>TCP用主机的IP地址加上主机上的端口号作为TCP连接的端点，这种端点就叫做套接字（socket）或插口。&lt;/p>
&lt;p>套接字用（IP地址：端口号）表示。&lt;/p>
&lt;p>它是网络通信过程中端点的抽象表示，包含进行网络通信必需的五种信息：连接使用的协议，本地主机的IP地址，本地进程的协议端口，远地主机的IP地址，远地进程的协议端口。&lt;/p>
&lt;p>听起来还是非常模糊、太抽象了！&lt;/p>
&lt;p>那么我们来看看它到底是什么？&lt;/p>
&lt;h3 id="套接字的地址结构">套接字的地址结构&lt;/h3>
&lt;p>刚才百科告诉我们，套接字用（IP地址：端口号）表示。&lt;/p>
&lt;p>那么在网络编程中如何告诉计算机，什么是端口，什么是端口号呢？&lt;/p>
&lt;p>于是出现了被计算机界公认的结构体，这个结构体保存在系统的标准库中：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;arpa/inet.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">struct&lt;/span> sockaddr_in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">__SOCKADDR_COMMON&lt;/span> (sin_);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">in_port_t&lt;/span> sin_port;			&lt;span style="color:#75715e">/* Port number. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">struct&lt;/span> in_addr sin_addr;		&lt;span style="color:#75715e">/* Internet address. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">/* Pad to size of `struct sockaddr&amp;#39;. */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">unsigned&lt;/span> &lt;span style="color:#66d9ef">char&lt;/span> sin_zero[&lt;span style="color:#66d9ef">sizeof&lt;/span> (&lt;span style="color:#66d9ef">struct&lt;/span> sockaddr) &lt;span style="color:#f92672">-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 __SOCKADDR_COMMON_SIZE &lt;span style="color:#f92672">-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 &lt;span style="color:#66d9ef">sizeof&lt;/span> (&lt;span style="color:#66d9ef">in_port_t&lt;/span>) &lt;span style="color:#f92672">-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			 &lt;span style="color:#66d9ef">sizeof&lt;/span> (&lt;span style="color:#66d9ef">struct&lt;/span> in_addr)];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>看起来还是比较复杂的，但是用起来一点都不复杂。&lt;/p></description></item><item><title>渗透测试中使用Ubuntu的一些小技巧</title><link>https://payloads.online/archivers/2018-03-18/1/</link><pubDate>Sun, 18 Mar 2018 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2018-03-18/1/</guid><description>&lt;h2 id="0x00-前言">0x00 前言&lt;/h2>
&lt;p>由于学习C、C++我喜欢在Linux平台，首选了Ubuntu这个发新版，目前已经做得很不错了，但是平常使用的时候会发现一些比较麻烦的事情。&lt;/p>
&lt;p>本文就把一些技巧分享、记录下来。&lt;/p>
&lt;p>操作系统版本：Ubuntu 17.10&lt;/p>
&lt;p>我的源：&lt;/p>
&lt;pre tabindex="0">&lt;code>
deb http://cn.archive.ubuntu.com/ubuntu/ artful universe
deb http://cn.archive.ubuntu.com/ubuntu/ artful-updates universe
deb http://cn.archive.ubuntu.com/ubuntu/ artful multiverse
deb http://cn.archive.ubuntu.com/ubuntu/ artful-updates multiverse
deb http://cn.archive.ubuntu.com/ubuntu/ artful-backports main restricted universe multiverse
deb http://security.ubuntu.com/ubuntu artful-security main restricted
deb http://security.ubuntu.com/ubuntu artful-security universe
deb http://security.ubuntu.com/ubuntu artful-security multiverse
&lt;/code>&lt;/pre>&lt;h2 id="0x01-右键">0x01 右键&lt;/h2>
&lt;p>&lt;code>nautilus-actions&lt;/code> 是一个提供用户自定义鼠标右键菜单的软件。&lt;/p>
&lt;p>我们可以通过&lt;code>nautilus-actions-config-tool&lt;/code> 来配置自己想要的菜单&lt;/p>
&lt;p>安装方式很简单：&lt;code>sudo apt-get install nautilus-actions&lt;/code>&lt;/p>
&lt;p>在命令行中启动&lt;code>nautilus-actions-config-tool&lt;/code>就可以打开配置页面&lt;/p>
&lt;p>&lt;img src="https://images.payloads.online/1fdfde30-4f5f-11ec-817b-00d861bf4abb.png" alt="enter description here" title="0x01">&lt;/p>
&lt;p>可以看到我已经自己添加了两个菜单，主要用于Nmap从文本中读取目标进行扫描&lt;/p>
&lt;p>Ubuntu默认情况下是没有新建文本这个菜单的，我们自己通过这个工具添加一下试试：&lt;/p>
&lt;p>&lt;img src="https://images.payloads.online/2019ecba-4f5f-11ec-8af4-00d861bf4abb.png" alt="enter description here" title="0x02">&lt;/p>
&lt;p>配置一下命令：&lt;/p>
&lt;p>&lt;img src="https://images.payloads.online/20587ad4-4f5f-11ec-ae0f-00d861bf4abb.png" alt="enter description here" title="0x03">&lt;/p>
&lt;p>这里有几个变量介绍一下：&lt;/p>
&lt;ul>
&lt;li>%d 当前目录&lt;/li>
&lt;li>%f 当前选择的文件（单个）&lt;/li>
&lt;li>%F 当前选择的所有文件&lt;/li>
&lt;li>%b 当前文件&lt;/li>
&lt;li>&amp;hellip;&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>剩下的自己摸索，以上的已经够用了&lt;/p></description></item></channel></rss>