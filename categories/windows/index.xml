<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Windows on 倾旋的博客</title><link>https://payloads.online/categories/windows/</link><description>Recent content in Windows on 倾旋的博客</description><generator>Hugo</generator><language>zh-cn</language><copyright>倾旋 All rights reserved</copyright><lastBuildDate>Thu, 14 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://payloads.online/categories/windows/index.xml" rel="self" type="application/rss+xml"/><item><title>MemoryModule-实现原理</title><link>https://payloads.online/archivers/2019-03-14/1/</link><pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2019-03-14/1/</guid><description>URL https://github.com/fancycode/MemoryModule/blob/master/doc/readme.rst
Overview The default windows API functions to load external libraries into a program (LoadLibrary, LoadLibraryEx) only work with files on the filesystem. It&amp;rsquo;s therefore impossible to load a DLL from memory. But sometimes, you need exactly this functionality (e.g. you don&amp;rsquo;t want to distribute a lot of files or want to make disassembling harder). Common workarounds for this problems are to write the DLL into a temporary file first and import it from there.</description></item><item><title>BMP位图隐写</title><link>https://payloads.online/archivers/2019-01-31/1/</link><pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2019-01-31/1/</guid><description>0x01 BMP简介 BMP（全称Bitmap）是Windows操作系统中的标准图像文件格式，可以分成两类：设备有向量相关位图（DDB）和设备无向量相关位图（DIB），使用非常广。它采用位映射存储格式，除了图像深度可选以外，不采用其他任何压缩，因此，BMP文件所占用的空间很大。BMP文件的图像深度可选lbit、4bit、8bit及24bit。BMP文件存储数据时，图像的扫描方式是按从左到右、从下到上的顺序。由于BMP文件格式是Windows环境中交换与图有关的数据的一种标准，因此在Windows环境中运行的图形图像软件都支持BMP图像格式。
典型的BMP图像文件由四部分组成：
1：位图头文件数据结构，它包含BMP图像文件的类型、显示内容等信息； 2：位图信息数据结构，它包含有BMP图像的宽、高、压缩方法，以及定义颜色等信息； 3：调色板，这个部分是可选的，有些位图需要调色板，有些位图，比如真彩色图（24位的BMP）就不需要调色板； 4：位图数据，这部分的内容根据BMP位图使用的位数不同而不同，在24位图中直接使用RGB，而其他的小于24位的使用调色板中颜色索引值。 当然，我们不需要了解那么多，唯一比较重要的就是文件数据结构。
0x02 BMP文件格式 第一个知识点：BM (0x4D 0x42)
所有的BMP文件都以这两个字节开头（固定格式）。
详解大端模式和小端模式
由于个人计算机都是以小端存储的，所以你看到的0x4D 0x42都要从0x4D由右向左开始读取。
第二个知识点：BMP文件大小
0x00072D46 = 470342（Byte） = 470KB
所以这个BMP的文件大小是470KB，也就是说一个图片软件，校验图片是否损坏、是否完整，都是通过读取这四个字节来判断的。
当然在Web领域也是一样，在图片进行渲染的过程中也会判断文件是否完整。
0x03 偏移量-像素位置 BMP的格式我们不介绍太多，关键是找到像素的偏移量就够了，有了偏移量就能够覆盖像素，每一个像素的宽度是3个字节，也就是色光三原色的RGB值。
其中36前面的00 00 00 00是保留位，没有意义。
36 00 00 00(0x36)转换成十进制是54。
也就是说，从BMP文件的第一个字节开始，到第54个字节就是像素的开始。
三个D8就是一个像素。
0x04 写入内容 这个过程中，我们可以写入shellcode、PE文件、字符串等。
这里我只是写入了一个“Hello world !!!”：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 // ConsoleApplication1.</description></item></channel></rss>