<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on 倾旋的博客</title><link>https://payloads.online/tags/rust/</link><description>Recent content in Rust on 倾旋的博客</description><generator>Hugo</generator><language>zh-cn</language><copyright>倾旋 All rights reserved</copyright><lastBuildDate>Sun, 08 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://payloads.online/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>使用AI提取历年漏洞Fofa查询语句</title><link>https://payloads.online/archivers/2024-09-08/extract-vuln-search-queries/</link><pubDate>Sun, 08 Sep 2024 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2024-09-08/extract-vuln-search-queries/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>近期使用Rust开发了一个基于流水线的AI助手，名字叫&lt;code>Qpipe&lt;/code>，本文将演示我如何使用它来提取历年所有漏洞相关资产的查询语句。&lt;/p>
&lt;p>开源链接：&lt;a href="https://github.com/Rvn0xsy/Qpipe">https://github.com/Rvn0xsy/Qpipe&lt;/a>&lt;/p>
&lt;p>最近智谱开放了国内首个&lt;a href="https://open.bigmodel.cn/dev/api#glm-4">大模型免费API接口&lt;/a>，我就想着能否用它做一点事情，第一个想到的是把这两年披露的漏洞做一个梳理，就先从网络空间搜索引擎的语法开始。&lt;/p>
&lt;p>在特殊时期、特殊渠道被披露的漏洞一般都会有[Markdown]格式的文档来描述漏洞涉及的资产(查询语句)，并且附带了PoC的HTTP数据包，因此唯一需要做的就是把文档喂给AI,让AI提取结构化的查询语句。&lt;/p>
&lt;h2 id="ai-prompt">AI Prompt&lt;/h2>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-fallback" data-lang="fallback">&lt;span style="display:flex;">&lt;span>$ Qpipe -h
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: Qpipe [OPTIONS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -c, --config &amp;lt;FILE&amp;gt; Sets a custom config file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -d, --debug 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help Print help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -V, --version Print version
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>先将Qpipe下载到本地，然后编写特定的配置文件：&lt;/p></description></item></channel></rss>