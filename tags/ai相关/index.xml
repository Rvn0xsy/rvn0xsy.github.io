<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AI相关 on 倾旋的博客</title><link>https://payloads.online/tags/ai%E7%9B%B8%E5%85%B3/</link><description>Recent content in AI相关 on 倾旋的博客</description><generator>Hugo</generator><language>zh-cn</language><copyright>倾旋 All rights reserved</copyright><lastBuildDate>Tue, 04 Jun 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://payloads.online/tags/ai%E7%9B%B8%E5%85%B3/index.xml" rel="self" type="application/rss+xml"/><item><title>使用Coze平台对Github Star项目进行分析推送</title><link>https://payloads.online/archivers/2024-06-04/coze-ai/</link><pubDate>Tue, 04 Jun 2024 00:00:00 +0000</pubDate><guid>https://payloads.online/archivers/2024-06-04/coze-ai/</guid><description>👾实现思路 Coze有个版本，分别面向海外和国内，这里我使用海外版本
域名 模型 备注 coze.com GPT4o\GPT3.5\GPT4\Gemini 1.5 Pro.. 海外魔法 coze.cn 字节云雀 国内 这里不多介绍Coze平台的基本功能了，请移步官方文档：Coze - Coze 文档中心
整体实现思路如下：
编写一个能够读取我自己Github Star项目的插件 编写一个能够向知识星球推送文字的插件 创建工作流，方便后续其他Bot调用 创建一个Bot，编写Prompt，导入上述插件进行调试 设置自定义交互的按钮来修改变量，增加易用性 🔧编写访问Github API的插件 为了实现能够将Github的Star项目输入给AI，首先需要编写一个插件，这个插件用于访问Github API接口：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import requests import os # 获取Github访问令牌 GITHUB_TOKEN = os.getenv(&amp;#39;GITHUB_TOKEN&amp;#39;) headers = { &amp;#39;Authorization&amp;#39;: f&amp;#39;token {GITHUB_TOKEN}&amp;#39; } def get_starred_repos(username): url = f&amp;#39;https://api.</description></item></channel></rss>